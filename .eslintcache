[{"/home/onyx/Documents/DEV/ReactJS/sdi/src/index.js":"1","/home/onyx/Documents/DEV/ReactJS/sdi/src/reportWebVitals.js":"2","/home/onyx/Documents/DEV/ReactJS/sdi/src/App.js":"3","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Main.jsx":"4","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Home.jsx":"5","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/utils/Modal.jsx":"6","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/index.jsx":"7","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextInput.jsx":"8","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyCheckbox.jsx":"9","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MySelect.jsx":"10","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/Buttons.jsx":"11","/home/onyx/Documents/DEV/ReactJS/sdi/src/constants/index.js":"12","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceProfessionnel.jsx":"13","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceEtudiant.jsx":"14","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Navbar.jsx":"15","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/AccountItems.jsx":"16","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextArea.jsx":"17"},{"size":660,"mtime":1611450219153,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608976181023,"results":"20","hashOfConfig":"19"},{"size":1550,"mtime":1612352727760,"results":"21","hashOfConfig":"19"},{"size":8693,"mtime":1609457249490,"results":"22","hashOfConfig":"19"},{"size":47262,"mtime":1612384388573,"results":"23","hashOfConfig":"19"},{"size":1660,"mtime":1612196149344,"results":"24","hashOfConfig":"19"},{"size":392,"mtime":1612369341961,"results":"25","hashOfConfig":"19"},{"size":693,"mtime":1609546681532,"results":"26","hashOfConfig":"19"},{"size":675,"mtime":1612368589825,"results":"27","hashOfConfig":"19"},{"size":883,"mtime":1612094712050,"results":"28","hashOfConfig":"19"},{"size":1001,"mtime":1609523954627,"results":"29","hashOfConfig":"19"},{"size":267,"mtime":1612435717724,"results":"30","hashOfConfig":"19"},{"size":12124,"mtime":1612382143302,"results":"31","hashOfConfig":"19"},{"size":16740,"mtime":1612381916804,"results":"32","hashOfConfig":"19"},{"size":968,"mtime":1612345007083,"results":"33","hashOfConfig":"19"},{"size":526,"mtime":1612348991372,"results":"34","hashOfConfig":"19"},{"size":704,"mtime":1612369435430,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1u6yefu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/onyx/Documents/DEV/ReactJS/sdi/src/index.js",[],["75","76"],"/home/onyx/Documents/DEV/ReactJS/sdi/src/reportWebVitals.js",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/App.js",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Main.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Home.jsx",["77"],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/utils/Modal.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/index.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextInput.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyCheckbox.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MySelect.jsx",["78"],"import React, { Children } from 'react'\nimport { useField } from 'formik'\n\nexport default function MySelect({ label, children, ...props }) {\n    const [field, meta] = useField(props);\n\n    return (\n        <div className=\"m-4\">\n            <label className=\"block text-sm text-blue-900\" htmlFor={props.id || props.name}>{label}</label>\n            <select id={props.id} name={props.id || props.name} className={\"w-full px-5 py-1 text-blue-900 font-semibold rounded focus:outline-none \" + ((meta.touched && meta.error) ? \" bg-red-100 \" : \" bg-blue-100 \")} {...field} {...props} >\n                { children }\n            </select>\n\n\n            {\n                meta.touched && meta.error ?\n                    (\n                        <p className=\"text-red-600 text-xs italic\">{meta.error}</p>\n                    )\n                    : null\n            }\n        </div>\n    )\n}\n","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/Buttons.jsx",[],["79","80"],"/home/onyx/Documents/DEV/ReactJS/sdi/src/constants/index.js",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceProfessionnel.jsx",["81","82"],"import React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport * as Yup from 'yup';\nimport { phoneRegExp } from '../constants'\n\nimport { api_url } from '../constants';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChalkboardTeacher } from '@fortawesome/free-solid-svg-icons'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\n\n\nimport Navbar from './Navbar';\nimport AccountItems from './AccountItems';\n\n\nimport Modal from './utils/Modal'\n\n\nimport { Formik, Form } from 'formik';\nimport { MyTextInput, ButtonLight, ButtonDark, InputButtonDark } from './Form';\n\n\nimport '../assets/css/families.css';\nimport enterpriseImage from '../assets/imgs/enterprise.jpg';\n\n\nexport default function EspaceProfessionnel({ session, setSession }) {\n\n    const [presence, setPresence] = useState(false)\n    const [confirmation, setConfirmation] = useState(session.present)\n    const [annulation, setAnnulation] = useState(false)\n    const [modification, setModification] = useState(false)\n    const [erreur, setErreur] = useState(false)\n\n\n\n    return (\n        <div style={{ backgroundImage: `url(${enterpriseImage})`, backgroundSize: \"cover\", minHeight: \"100vh\", backgroundAttachment: \"fixed\" }}>\n\n            <Navbar />\n\n            <div id=\"corps_espace_prof\" className=\"bg-white bg-opacity-80 pb-10\" style={{ minHeight: \"calc(100vh - 5rem)\" }}>\n                <h1 className=\"font-semibold lobster text-7xl ml-10 pt-8 text-gray-900\">\n                    Espace Professionnel\n                </h1>\n\n                <FontAwesomeIcon className=\"hidden md:block\" icon={faChalkboardTeacher} style={{ fontSize: \"500px\", opacity: \"0.6\", position: 'absolute', right: \"40px\" }} />\n\n                <section className=\"mt-16 ml-20 md:w-7/12 mb-16\">\n                    <AccountItems name=\"N° du stand\" value={session.stand} />\n                    <AccountItems name=\"Raison sociale\" value={session.raison_sociale} />\n                    <AccountItems name=\"Interlocuteur\" value={session.interlocuteur} />\n                    <AccountItems name=\"Contact\" value={session.contact} />\n                    <AccountItems name=\"Adresse-mail\" value={session.email} />\n                </section>\n\n                <p className=\"md:w-7/12 text-gray-900 text-center mb-10 font-semibold\">\n                    Le Salon de l'Innovation (SI) aura lieu le Samedi 27 Février 2020 <br />\n                    Veuillez donc confirmer ou infirmer votre présence\n                </p>\n\n                <div className=\"flex justify-center md:w-7/12\">\n                    {\n                        presence\n                            ?\n                            <button className=\"bg-red-600 py-2 px-4 text-white ml-20\" onClick={() => {\n\n                                fetch(api_url + \"/prof/presenceProfessionnel\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify({\n                                        email: session.email,\n                                        present: 0,\n                                    })\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n\n                                        if (response.success) {\n                                            setAnnulation(true)\n                                            setPresence(false)\n                                        }\n                                    })\n                                    .catch(err => {\n                                        console.log(\"Il y a une erreur\");\n                                    });\n                            }}>\n                                Infirmer sa présence\n                            </button>\n                            :\n                            <button className=\"bg-green-700 py-2 px-4 text-white ml-20\" onClick={() => {\n                                fetch(api_url + \"/prof/presenceProfessionnel\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify({\n                                        email: session.email,\n                                        present: 1,\n                                    })\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n\n                                        if (response.success) {\n                                            setConfirmation(true)\n                                            setPresence(true)\n                                        }\n                                    })\n                                    .catch(err => {\n                                        console.log(\"Il y a une erreur\");\n                                    });\n                            }}>\n                                Confimer sa présence\n                            </button>\n                    }\n\n                    <button className=\"bg-gray-900 py-2 px-4 text-white ml-20\" onClick={() => {\n                        setModification(true)\n                    }}>\n                        Modifier ses informations\n                    </button>\n                </div>\n\n            </div>\n\n\n\n\n\n\n            {\n                //  Pop-up pour confirmation de présence\n                (confirmation && !annulation) &&\n                <Modal isOpen={confirmation} toggle={setConfirmation} transparent small darkModal>\n                    <p className=\"flex items-center my-4\">\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"4x\" className=\"mr-6\" color=\"green\" />\n                        <h3 className=\"text-2xl font-semibold\">\n                            Présence confirmée\n                        </h3>\n                    </p>\n                </Modal>\n            }\n\n\n\n            {\n                //  Pop-up pour infirmation de présence\n                (annulation && !confirmation) &&\n                <Modal isOpen={annulation} toggle={setAnnulation} transparent small darkModal>\n                    <p className=\"flex items-center my-4\">\n                        <FontAwesomeIcon icon={faWindowClose} size=\"4x\" className=\"mr-6\" color=\"red\" />\n                        <h3 className=\"text-2xl font-semibold\">\n                            Présence annulée\n                        </h3>\n                    </p>\n                </Modal>\n            }\n\n\n\n            {\n                //  Pop-up pour modification des infos\n                modification &&\n                <Modal title=\"Espace Professionnel\" isOpen={modification} toggle={setModification} transparent darkModal>\n                    {\n                        <Formik\n                            initialValues={{\n                                \"raison_sociale\": session.raison_sociale ? session.raison_sociale : \"\",\n                                \"interlocuteur\": session.interlocuteur ? session.interlocuteur : \"\",\n                                \"contact\": session.contact ? session.contact : \"\",\n                                \"email\": session.email ? session.email : \"\"\n                            }}\n\n                            validationSchema={Yup.object({\n                                raison_sociale: Yup.string(),\n                                interlocuteur: Yup.string(),\n                                contact: Yup.string()\n                                    .matches(phoneRegExp, 'Le numéro de téléphone est invalide'),\n                                email: Yup.string()\n                                    .email('Adresse électronique invalide'),\n                            })}\n\n                            onSubmit={(values) => {\n\n                                fetch(api_url + \"/prof/UpdateProfessionnel\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify({\n                                        old_email: session.email,\n                                        ...values\n                                    })\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n                                        if (response.success) {\n                                            for (let [key, value] of Object.entries(values)) {\n                                                session[`${key}`] = value\n                                            }\n                                            console.log(session)    \n                                            setErreur(false)\n                                            setSession(session)\n                                            setModification(false)\n                                        } else {\n                                            setErreur(true)\n                                        }\n                                    })\n                                    .catch(err => {\n                                        setErreur(true)\n                                        console.log(err);\n                                    });\n\n                            }}\n                        >\n                            <Form>\n\n                                {\n                                    erreur &&\n                                    <p className=\"text-red-600 text-center\">\n                                        Une erreur est survenue\n                                    </p>\n                                }\n                                <MyTextInput\n                                    label=\"Raison sociale\"\n                                    name=\"raison_sociale\"\n                                    type=\"text\"\n                                />\n                                <MyTextInput\n                                    label=\"Interlocuteur\"\n                                    name=\"interlocuteur\"\n                                    type=\"text\"\n                                />\n                                <MyTextInput\n                                    label=\"Contact\"\n                                    name=\"contact\"\n                                    type=\"tel\"\n                                />\n                                <MyTextInput\n                                    label=\"Adresse mail\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"sammy.bini@gmail.com\"\n                                />\n\n                                <div className=\"flex justify-around\">\n                                    <div className=\"flex justify-between pt-2\">\n                                        <ButtonLight value=\"Annuler\" onClick={() => {\n                                            setModification(false)\n                                        }}>\n                                            Annuler\n                                        </ButtonLight>\n                                    </div>\n                                    <div className=\"flex justify-between pt-2\">\n                                        <InputButtonDark type=\"submit\" value=\"Valider\" />\n                                    </div>\n\n                                </div>\n                            </Form>\n                        </Formik>\n                    }\n                </Modal>\n            }\n\n\n\n\n        </div>\n    )\n}\n","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceEtudiant.jsx",["83","84"],"import React, {\n    useState\n} from 'react'\n\nimport * as Yup from 'yup';\nimport { phoneRegExp } from '../constants'\n\nimport { api_url } from '../constants';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserGraduate, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport Navbar from './Navbar';\nimport AccountItems from './AccountItems';\n\n\nimport Modal from './utils/Modal'\n\n\nimport { Formik, Form } from 'formik';\nimport { MyTextInput, MyTextArea, ButtonLight, InputButtonDark, MySelect, MyCheckbox } from './Form';\n\n\nimport '../assets/css/families.css';\nimport enterpriseImage from '../assets/imgs/enterprise.jpg';\n\n\nexport default function EspaceEtudiant({ session, setSession }) {\n\n    const [participationHack, setParticipationHack] = useState(false)\n    const [participationJetic, setParticipationJetic] = useState(false)\n    const [jeticErreur, setJeticErreur] = useState(false)\n    const [hackErreur, setHackErreur] = useState(false)\n    const [popUpJetic, setPopUpJetic] = useState(false)\n    const [popUpHack, setPopUpHack] = useState(false)\n\n\n\n    return (\n        <div style={{ backgroundImage: `url(${enterpriseImage})`, backgroundSize: \"cover\", minHeight: \"100vh\", backgroundAttachment: \"fixed\" }}>\n\n            <Navbar />\n\n            <div id=\"corps_espace_prof\" className=\"bg-white bg-opacity-80 pb-10\" style={{ minHeight: \"calc(100vh - 5rem)\" }}>\n                <h1 className=\"font-semibold lobster text-7xl ml-10 pt-8 text-gray-900\">\n                    Espace Etudiant\n                </h1>\n\n                <FontAwesomeIcon className=\"hidden md:block\" icon={faUserGraduate} style={{ fontSize: \"500px\", opacity: \"0.6\", position: 'absolute', right: \"40px\" }} />\n\n\n                <section className=\"mt-16 ml-20 md:w-7/12 mb-16\">\n                    <AccountItems name=\"Identifiant\" value={session.identifiant} />\n                    <AccountItems name=\"Nom\" value={session.nom} />\n                    <AccountItems name=\"Prénoms\" value={session.prenoms} />\n                    <AccountItems name=\"Classe\" value={session.classe} />\n                    <AccountItems name=\"Contact\" value={session.contact} />\n                    <AccountItems name=\"Adresse-mail\" value={session.email} />\n                </section>\n\n\n                <p className=\"md:w-7/12 text-gray-900 text-center mb-10 font-semibold\">\n                    La Semaine De l'Innovation (SDI) aura lieu du Jeudi 25 Février au Lundi 1er Mars 2020. <br />\n                    Vous pouvez participer à la JETIC ou au très reputé Technovore Hackathon\n                </p>\n\n                <div className=\"flex justify-around md:w-7/12\">\n\n                    <button className=\"bg-gray-900 py-2 px-4 text-white\" onClick={() => {\n                        setParticipationHack(true)\n                    }}>\n                        <span>Participer au Hackathon</span>\n                    </button>\n\n                    <button className=\"bg-gray-900 py-2 px-4 text-white\" onClick={() => {\n                        setParticipationJetic(true)\n                    }}>\n                        <span>Participer à la JETIC</span>\n                    </button>\n                </div>\n\n            </div>\n\n\n\n\n\n            {\n                //  Pop-up pour confirmation de présence\n                popUpJetic &&\n                <Modal isOpen={popUpJetic} toggle={setPopUpJetic} transparent small darkModal>\n                    <p className=\"flex items-center my-4\">\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"4x\" className=\"mr-6\" color=\"green\" />\n                        <h3 className=\"text-2xl font-semibold\">\n                            Inscription à la JETIC validée\n                        </h3>\n                    </p>\n                </Modal>\n            }\n\n            {\n                //  Pop-up pour confirmation de présence\n                popUpHack &&\n                <Modal isOpen={popUpHack} toggle={setPopUpHack} transparent small darkModal>\n                    <p className=\"flex items-center my-4\">\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"4x\" className=\"mr-6\" color=\"green\" />\n                        <h3 className=\"text-2xl font-semibold\">\n                            Inscription au Hackathon validée\n                        </h3>\n                    </p>\n                </Modal>\n            }\n\n\n            {\n                //  Pop-up pour la participation au Hackathon\n                participationHack &&\n                <Modal title=\"Participation au Technovore Hackathon\" isOpen={setParticipationHack} toggle={setParticipationHack} transparent darkModal>\n                    {\n                        <Formik\n\n                            initialValues={{\n                                \"nom_equipe\": \"\",\n                                \"niveau_hack\": \"niveau_1\",\n                                \"branche_hack\": \"branche_1\",\n                                \"id_1_membre\": session.identifiant,\n                                \"id_2_membre\": \"SDI-E\",\n                                \"id_3_membre\": \"SDI-E\"\n                            }}\n\n                            validationSchema={Yup.object({\n                                nom_equipe: Yup\n                                    .string()\n                                    .required(\"Ce champ est requis\"),\n                                branche_hack: Yup\n                                    .string()\n                                    .required(\"Ce champ est requis\"),\n                                id_1_membre: Yup\n                                    .string(),\n                                id_2_membre: Yup\n                                    .string(),\n                                id_3_membre: Yup\n                                    .string(),\n                            })}\n\n                            onSubmit={(values) => {\n                                console.log(values);\n\n                                values.id_1_membre = session.identifiant\n\n                                fetch(api_url + \"/hack/insertParticipant\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify(values)\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n\n                                        console.log(\"Res\");\n                                        console.log(response);\n\n                                        if (response.success) {\n                                            setParticipationHack(false)\n                                            setHackErreur(false)\n                                            setPopUpHack(true)\n                                        } else {\n                                            setJeticErreur(true)\n                                            console.error(response.erreur);\n                                        }\n                                    })\n                                    .catch(err => {\n                                        setJeticErreur(true)\n                                        console.log(err);\n                                    });\n                            }}\n                        >\n                            <Form>\n                                <MyTextInput\n                                    label=\"Nom de l'équipe\"\n                                    name=\"nom_equipe\"\n                                    type=\"text\"\n                                />\n                                <MySelect\n                                    label=\"Niveau\"\n                                    name=\"niveau_hack\"\n                                >\n                                    <option value=\"niveau_1\">Niveau 1</option>\n                                    <option value=\"niveau_2\">Niveau 2</option>\n                                    <option value=\"niveau_3\">Niveau 3</option>\n                                </MySelect>\n                                <MySelect\n                                    label=\"Branche\"\n                                    name=\"branche_hack\"\n                                >\n                                    <option value=\"branche_1\">Branche 1</option>\n                                    <option value=\"branche_2\">Branche 2</option>\n                                </MySelect>\n                                <MyTextInput\n                                    label=\"Identifiant du 1er membre\"\n                                    name=\"id_1_membre\"\n                                    type=\"text\"\n                                    required={true}\n                                />\n                                <MyTextInput\n                                    label=\"Identifiant du 2nd membre\"\n                                    name=\"id_2_membre\"\n                                    type=\"text\"\n                                />\n                                <MyTextInput\n                                    label=\"Identifiant du 3eme membre\"\n                                    name=\"id_3_membre\"\n                                    type=\"text\"\n                                />\n\n\n                                {\n                                    hackErreur &&\n                                    <p className=\"text-center text-red-700 my-4\">\n                                        Une erreur est survenue\n                                    </p>\n                                }\n\n                                <div className=\"flex justify-around\">\n                                    <div className=\"flex justify-between pt-2\">\n                                        <ButtonLight value=\"Annuler\" onClick={() => {\n                                            setParticipationHack(false)\n                                        }}>\n                                            Annuler\n                                        </ButtonLight>\n                                    </div>\n                                    <div className=\"flex justify-between pt-2\">\n                                        <InputButtonDark type=\"submit\" value=\"Valider\" />\n                                    </div>\n                                </div>\n                            </Form>\n                        </Formik>\n                    }\n                </Modal>\n            }\n\n\n\n\n\n            {\n                //  Pop-up pour la participation à la JETIC\n                participationJetic &&\n                <Modal title=\"Participation à la JETIC\" isOpen={setParticipationJetic} toggle={setParticipationJetic} transparent darkModal>\n                    {\n                        <Formik\n                            initialValues={{\n                                \"titre_projet\": \"\",\n                                \"description_projet\": \"\",\n                                \"titre_tp\": \"\",\n                                \"description_tp\": \"\",\n                            }}\n\n                            validationSchema={Yup.object({\n                                titre_projet: Yup\n                                    .string(),\n                                description_projet: Yup\n                                    .string(),\n                                titre_tp: Yup\n                                    .string(),\n                                description_tp: Yup\n                                    .string()\n                            })}\n\n                            onSubmit={(values) => {\n                                console.log(values);\n\n                                values.etudiant = session.identifiant\n\n                                fetch(api_url + \"/jetic/insertJeticParticipant\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify(values)\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n                                        if (response.success) {\n                                            setParticipationJetic(false)\n                                            setJeticErreur(false)\n                                            setPopUpJetic(true)\n                                        } else {\n                                            setJeticErreur(true)\n                                            console.error(response.erreur);\n                                        }\n                                    })\n                                    .catch(err => {\n                                        setJeticErreur(true)\n                                        console.log(err);\n                                    });\n                            }}\n\n                        >\n                            <Form>\n\n                                <div className=\"border border-blue-300 rounded-2xl \">\n                                    <span className=\"text-blue-900 bg-white text-sm relative px-4\" style={{\n                                        \"top\": \"-12px\",\n                                        \"right\": \"-10px\"\n                                    }}>\n                                        Projet\n                                    </span>\n\n                                    <MyTextInput\n                                        label=\"Titre du projet\"\n                                        name=\"titre_projet\"\n                                        id=\"titre_projet\"\n                                        type=\"text\"\n                                    />\n                                    <MyTextArea\n                                        label=\"Description du projet\"\n                                        name=\"description_projet\"\n                                        id=\"description_projet\"\n                                        type=\"text\"\n                                    />\n                                </div>\n\n\n                                <div className=\"border border-blue-300 rounded-2xl mt-8\">\n                                    <span className=\"text-blue-900 bg-white text-sm relative px-4\" style={{\n                                        \"top\": \"-12px\",\n                                        \"right\": \"-10px\"\n                                    }}>\n                                        Travaux pratiques\n                                    </span>\n\n                                    <MyTextInput\n                                        label=\"Titre du TP\"\n                                        name=\"titre_tp\"\n                                        id=\"titre_tp\"\n                                        type=\"text\"\n                                    />\n                                    <MyTextArea\n                                        label=\"Description du TP\"\n                                        name=\"description_tp\"\n                                        id=\"description_tp\"\n                                        type=\"text\"\n                                    />\n                                </div>\n\n\n                                {\n                                    jeticErreur &&\n                                    <p className=\"text-center text-red-700 my-4\">\n                                        Une erreur est survenue\n                                    </p>\n                                }\n\n\n                                <div className=\"flex justify-around\">\n                                    <div className=\"flex justify-between pt-2\">\n                                        <ButtonLight value=\"Annuler\" onClick={() => {\n                                            setParticipationJetic(false)\n                                        }}>\n                                            Annuler\n                                        </ButtonLight>\n                                    </div>\n                                    <div className=\"flex justify-between pt-2\">\n                                        <InputButtonDark type=\"submit\" value=\"Valider\" />\n                                    </div>\n                                </div>\n                            </Form>\n                        </Formik>\n                    }\n                </Modal>\n            }\n\n\n\n\n        </div>\n    )\n}\n","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Navbar.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/AccountItems.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextArea.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":105,"column":11,"nodeType":"91","messageId":"92","endLine":105,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"85","replacedBy":"94"},{"ruleId":"87","replacedBy":"95"},{"ruleId":"89","severity":1,"message":"96","line":3,"column":5,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":26,"column":36,"nodeType":"91","messageId":"92","endLine":26,"endColumn":46},{"ruleId":"89","severity":1,"message":"98","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":21},{"ruleId":"89","severity":1,"message":"99","line":21,"column":75,"nodeType":"91","messageId":"92","endLine":21,"endColumn":85},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'galleryImgs' is assigned a value but never used.","Identifier","unusedVar","'Children' is defined but never used.",["100"],["101"],"'useEffect' is defined but never used.","'ButtonDark' is defined but never used.","'phoneRegExp' is defined but never used.","'MyCheckbox' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"/home/onyx/Documents/DEV/ReactJS/sdi/src/index.js":"1","/home/onyx/Documents/DEV/ReactJS/sdi/src/reportWebVitals.js":"2","/home/onyx/Documents/DEV/ReactJS/sdi/src/App.js":"3","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Main.jsx":"4","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Home.jsx":"5","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/utils/Modal.jsx":"6","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/index.jsx":"7","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextInput.jsx":"8","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyCheckbox.jsx":"9","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MySelect.jsx":"10","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/Buttons.jsx":"11","/home/onyx/Documents/DEV/ReactJS/sdi/src/constants/index.js":"12","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceProfessionnel.jsx":"13","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceEtudiant.jsx":"14","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Navbar.jsx":"15","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/AccountItems.jsx":"16","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextArea.jsx":"17","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextInputShow.jsx":"18"},{"size":660,"mtime":1611450219153,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608976181023,"results":"21","hashOfConfig":"20"},{"size":1550,"mtime":1612352727760,"results":"22","hashOfConfig":"20"},{"size":8693,"mtime":1609457249490,"results":"23","hashOfConfig":"20"},{"size":45861,"mtime":1612539778819,"results":"24","hashOfConfig":"20"},{"size":1660,"mtime":1612196149344,"results":"25","hashOfConfig":"20"},{"size":462,"mtime":1612484162721,"results":"26","hashOfConfig":"20"},{"size":693,"mtime":1609546681532,"results":"27","hashOfConfig":"20"},{"size":675,"mtime":1612368589825,"results":"28","hashOfConfig":"20"},{"size":1061,"mtime":1612514003173,"results":"29","hashOfConfig":"20"},{"size":1001,"mtime":1609523954627,"results":"30","hashOfConfig":"20"},{"size":267,"mtime":1612480611592,"results":"31","hashOfConfig":"20"},{"size":12083,"mtime":1612537665290,"results":"32","hashOfConfig":"20"},{"size":48475,"mtime":1612539301715,"results":"33","hashOfConfig":"20"},{"size":1060,"mtime":1612475073349,"results":"34","hashOfConfig":"20"},{"size":526,"mtime":1612348991372,"results":"35","hashOfConfig":"20"},{"size":704,"mtime":1612369435430,"results":"36","hashOfConfig":"20"},{"size":443,"mtime":1612484112666,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1u6yefu",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},"/home/onyx/Documents/DEV/ReactJS/sdi/src/index.js",[],["78","79"],"/home/onyx/Documents/DEV/ReactJS/sdi/src/reportWebVitals.js",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/App.js",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Main.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Home.jsx",["80"],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/utils/Modal.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/index.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextInput.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyCheckbox.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MySelect.jsx",["81"],"import React, { Children } from 'react'\nimport { useField } from 'formik'\n\nexport default function MySelect({ label, children, options, ...props }) {\n    const [field, meta] = useField(props);\n\n    return (\n        <div className=\"m-4\">\n            <label className=\"block text-sm text-blue-900\" htmlFor={props.id || props.name}>{label}</label>\n            <select id={props.id} name={props.id || props.name} className={\"w-full px-5 py-1 text-blue-900 font-semibold rounded focus:outline-none \" + ((meta.touched && meta.error) ? \" bg-red-100 \" : \" bg-blue-100 \")} {...field} {...props} >\n                {\n                options.map((i) => (\n                    <option value={i[0]} selected={field.value === i[0]}>{i[1]}</option>\n                ))\n                \n                }\n            </select>\n\n\n            {\n                meta.touched && meta.error ?\n                    (\n                        <p className=\"text-red-600 text-xs italic\">{meta.error}</p>\n                    )\n                    : null\n            }\n        </div>\n    )\n}\n","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/Buttons.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/constants/index.js",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceProfessionnel.jsx",["82","83"],"import React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport * as Yup from 'yup';\nimport { phoneRegExp } from '../constants'\n\nimport { api_url } from '../constants';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChalkboardTeacher } from '@fortawesome/free-solid-svg-icons'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\n\n\nimport Navbar from './Navbar';\nimport AccountItems from './AccountItems';\n\n\nimport Modal from './utils/Modal'\n\n\nimport { Formik, Form } from 'formik';\nimport { MyTextInput, ButtonLight, ButtonDark, InputButtonDark } from './Form';\n\n\nimport '../assets/css/families.css';\nimport bienvenue_a_l_esatic from '../assets/imgs/bienvenue_a_l_esatic.jpg';\n\n\nexport default function EspaceProfessionnel({ session, setSession }) {\n\n    const [presence, setPresence] = useState(false)\n    const [confirmation, setConfirmation] = useState(session.present)\n    const [annulation, setAnnulation] = useState(false)\n    const [modification, setModification] = useState(false)\n    const [erreur, setErreur] = useState(false)\n\n\n\n    return (\n        <div style={{ backgroundImage: `url(${bienvenue_a_l_esatic})`, backgroundSize: \"cover\", minHeight: \"100vh\", backgroundAttachment: \"fixed\" }}>\n\n            <Navbar />\n\n            <div id=\"corps_espace_prof\" className=\"bg-white bg-opacity-80 pb-10\" style={{ minHeight: \"calc(100vh - 5rem)\" }}>\n                <h1 className=\"font-semibold lobster text-7xl ml-10 pt-8 text-gray-900\">\n                    Espace Professionnel\n                </h1>\n\n                <FontAwesomeIcon className=\"hidden md:block\" icon={faChalkboardTeacher} style={{ fontSize: \"500px\", opacity: \"0.6\", position: 'absolute', right: \"40px\" }} />\n\n                <section className=\"mt-16 ml-20 md:w-7/12 mb-16\">\n                    <AccountItems name=\"N° du stand\" value={session.stand} />\n                    <AccountItems name=\"Raison sociale\" value={session.raison_sociale} />\n                    <AccountItems name=\"Interlocuteur\" value={session.interlocuteur} />\n                    <AccountItems name=\"Contact\" value={session.contact} />\n                    <AccountItems name=\"Adresse-mail\" value={session.email} />\n                </section>\n\n                <p className=\"md:w-7/12 text-gray-900 text-center mb-10 font-semibold\">\n                    Le Salon de l'Innovation (SI) aura lieu le Samedi 27 Février 2020 <br />\n                    Veuillez donc confirmer ou infirmer votre présence\n                </p>\n\n                <div className=\"flex justify-center md:w-7/12\">\n                    {\n                        presence\n                            ?\n                            <button className=\"bg-red-600 py-2 px-4 text-white ml-20\" onClick={() => {\n\n                                fetch(api_url + \"/prof/presenceProfessionnel\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify({\n                                        email: session.email,\n                                        present: 0,\n                                    })\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n\n                                        if (response.success) {\n                                            setAnnulation(true)\n                                            setPresence(false)\n                                        }\n                                    })\n                                    .catch(err => {\n                                        console.log(\"Il y a une erreur\");\n                                    });\n                            }}>\n                                Infirmer sa présence\n                            </button>\n                            :\n                            <button className=\"bg-green-700 py-2 px-4 text-white ml-20\" onClick={() => {\n                                fetch(api_url + \"/prof/presenceProfessionnel\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify({\n                                        email: session.email,\n                                        present: 1,\n                                    })\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n\n                                        if (response.success) {\n                                            setConfirmation(true)\n                                            setPresence(true)\n                                        }\n                                    })\n                                    .catch(err => {\n                                        console.log(\"Il y a une erreur\");\n                                    });\n                            }}>\n                                Confimer sa présence\n                            </button>\n                    }\n\n                    <button className=\"bg-gray-900 py-2 px-4 text-white ml-20\" onClick={() => {\n                        setModification(true)\n                    }}>\n                        Modifier ses informations\n                    </button>\n                </div>\n\n            </div>\n\n\n\n\n\n\n            {\n                //  Pop-up pour confirmation de présence\n                (confirmation && !annulation) &&\n                <Modal isOpen={confirmation} toggle={setConfirmation} transparent small darkModal>\n                    <p className=\"flex items-center my-4\">\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"4x\" className=\"mr-6\" color=\"green\" />\n                        <h3 className=\"text-2xl font-semibold\">\n                            Présence confirmée\n                        </h3>\n                    </p>\n                </Modal>\n            }\n\n\n\n            {\n                //  Pop-up pour infirmation de présence\n                (annulation && !confirmation) &&\n                <Modal isOpen={annulation} toggle={setAnnulation} transparent small darkModal>\n                    <p className=\"flex items-center my-4\">\n                        <FontAwesomeIcon icon={faWindowClose} size=\"4x\" className=\"mr-6\" color=\"red\" />\n                        <h3 className=\"text-2xl font-semibold\">\n                            Présence annulée\n                        </h3>\n                    </p>\n                </Modal>\n            }\n\n\n\n            {\n                //  Pop-up pour modification des infos\n                modification &&\n                <Modal title=\"Espace Professionnel\" isOpen={modification} toggle={setModification} transparent darkModal>\n                    {\n                        <Formik\n                            initialValues={{\n                                \"raison_sociale\": session.raison_sociale ? session.raison_sociale : \"\",\n                                \"interlocuteur\": session.interlocuteur ? session.interlocuteur : \"\",\n                                \"contact\": session.contact ? session.contact : \"\",\n                                \"email\": session.email ? session.email : \"\"\n                            }}\n\n                            validationSchema={Yup.object({\n                                contact: Yup.string()\n                                    .matches(phoneRegExp, 'Le numéro de téléphone est invalide'),\n                                email: Yup.string()\n                                    .email('Adresse électronique invalide'),\n                            })}\n\n                            onSubmit={(values) => {\n\n                                fetch(api_url + \"/prof/UpdateProfessionnel\", {\n                                    \"method\": \"POST\",\n                                    \"headers\": {\n                                        \"content-type\": \"application/json\"\n                                    },\n                                    \"body\": JSON.stringify({\n                                        old_email: session.email,\n                                        ...values\n                                    })\n                                })\n                                    .then(response => response.json())\n                                    .then(response => {\n                                        if (response.success) {\n                                            for (let [key, value] of Object.entries(values)) {\n                                                session[`${key}`] = value\n                                            }\n                                            console.log(session)    \n                                            setErreur(false)\n                                            window.localStorage.setItem(\"sdi_session\", JSON.stringify(session))\n                                            setModification(false)\n                                        } else {\n                                            setErreur(true)\n                                        }\n                                    })\n                                    .catch(err => {\n                                        setErreur(true)\n                                        console.log(err);\n                                    });\n\n                            }}\n                        >\n                            <Form>\n\n                                {\n                                    erreur &&\n                                    <p className=\"text-red-600 text-center\">\n                                        Une erreur est survenue\n                                    </p>\n                                }\n                                <MyTextInput\n                                    label=\"Raison sociale\"\n                                    name=\"raison_sociale\"\n                                    type=\"text\"\n                                />\n                                <MyTextInput\n                                    label=\"Interlocuteur\"\n                                    name=\"interlocuteur\"\n                                    type=\"text\"\n                                />\n                                <MyTextInput\n                                    label=\"Contact\"\n                                    name=\"contact\"\n                                    type=\"tel\"\n                                />\n                                <MyTextInput\n                                    label=\"Adresse mail\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"conseilestudiantinesatic@gmail.com\"\n                                />\n\n                                <div className=\"flex justify-around\">\n                                    <div className=\"flex justify-between pt-2\">\n                                        <ButtonLight value=\"Annuler\" onClick={() => {\n                                            setModification(false)\n                                        }}>\n                                            Annuler\n                                        </ButtonLight>\n                                    </div>\n                                    <div className=\"flex justify-between pt-2\">\n                                        <InputButtonDark type=\"submit\" value=\"Valider\" />\n                                    </div>\n\n                                </div>\n                            </Form>\n                        </Formik>\n                    }\n                </Modal>\n            }\n\n\n\n\n        </div>\n    )\n}\n","/home/onyx/Documents/DEV/ReactJS/sdi/src/components/EspaceEtudiant.jsx",["84","85","86","87","88","89","90"],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Navbar.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/AccountItems.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextArea.jsx",[],"/home/onyx/Documents/DEV/ReactJS/sdi/src/components/Form/MyTextInputShow.jsx",["91"],"import React from 'react'\nimport { useField } from 'formik'\n\nexport default function MyTextInputShow({ label, value, ...props }) {\n    return (\n        <div className=\"m-4\">\n            <label className=\"block text-sm text-blue-900\" htmlFor={props.id || props.name}>{label}</label>\n            <p className={\"w-full px-5 py-1 text-blue-900 font-semibold rounded bg-blue-100 \"}>\n                {value}\n            </p>\n\n        </div>\n    )\n}\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":168,"column":21,"nodeType":"98","endLine":168,"endColumn":56},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":3,"column":5,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":26,"column":36,"nodeType":"101","messageId":"102","endLine":26,"endColumn":46},{"ruleId":"99","severity":1,"message":"105","line":7,"column":10,"nodeType":"101","messageId":"102","endLine":7,"endColumn":21},{"ruleId":"99","severity":1,"message":"106","line":22,"column":75,"nodeType":"101","messageId":"102","endLine":22,"endColumn":90},{"ruleId":"107","severity":1,"message":"108","line":70,"column":8,"nodeType":"109","endLine":70,"endColumn":21,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":95,"column":8,"nodeType":"109","endLine":95,"endColumn":21,"suggestions":"112"},{"ruleId":"96","severity":1,"message":"97","line":106,"column":17,"nodeType":"98","endLine":106,"endColumn":52},{"ruleId":"113","severity":1,"message":"114","line":252,"column":49,"nodeType":"115","messageId":"116","endLine":252,"endColumn":51},{"ruleId":"113","severity":1,"message":"114","line":490,"column":49,"nodeType":"115","messageId":"116","endLine":490,"endColumn":51},{"ruleId":"99","severity":1,"message":"117","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":18},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","no-unused-vars","'Children' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ButtonDark' is defined but never used.","'phoneRegExp' is defined but never used.","'MyTextInputShow' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'session.hack' and 'session.identifiant'. Either include them or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has missing dependencies: 'session.identifiant' and 'session.jetic'. Either include them or remove the dependency array.",["121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [reloadoHack, session.hack, session.identifiant]",{"range":"126","text":"127"},"Update the dependencies array to be: [reloadJetic, session.identifiant, session.jetic]",{"range":"128","text":"129"},[2311,2324],"[reloadoHack, session.hack, session.identifiant]",[3123,3136],"[reloadJetic, session.identifiant, session.jetic]"]